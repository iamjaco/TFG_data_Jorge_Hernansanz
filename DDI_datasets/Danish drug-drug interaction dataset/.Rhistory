Praeparat$ID_Praeparat <- as.character(Praeparat$ID_Praeparat)
Praeparat$Praeparatidentifier <- as.character(Praeparat$Praeparatidentifier)
###
Index <- c(Niveau3$ID_Stof1,Niveau3$ID_Stof2)
Index <- unique(Index)     #754 drugs
Index <- as.data.frame(Index)
colnames(Index)[1] = 'ID_Stof'
###
###
Index<- merge(Index,Substanser[,c(1,2)], by = 'ID_Stof')
Index <- unique(Index)
###
###
Index<- merge(Index,Praeparat_grupering[,c(2,3)], by = 'ID_Substans')
Index <- unique(Index)
###
###
Index<- merge(Index,Praeparat[,c(1,2)], by = 'ID_Praeparat')
Index <- unique(Index)
###
###
Index<- merge(Index,ATC_codes[,c(1,7)], by.x = 'Praeparatidentifier', by.y = 'Drugid')
Index <- unique(Index)
###
Index <- Index[,c('ID_Stof','ATC-kode')]
colnames(Index)[2] <- 'ATC_code'
DDI_dataframe <- Niveau3[,8:9]
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
knitr::opts_chunk$set(echo = TRUE)
library(XML)
library(data.table)
DDI_danish <- xmlParse("XML_Dato_3.xml")
DDI_danish <-xmlToList(DDI_danish)
#Obtaining Stof_ID (the drug_ID)
Niveau3 <- rbindlist(lapply(DDI_danish$NIVEAU3ER, function(x) data.table(t(x))),
fill = TRUE)
Niveau3 <- as.data.frame(Niveau3)
#Obtaining ID_of_substance
Substanser <- rbindlist(lapply(DDI_danish$SUBSTANSER, function(x) data.table(t(x))),
fill = TRUE)
Substanser <- as.data.frame(Substanser)
#Obtaining praeparat_ID
PraeparatGrupperinger <- rbindlist(lapply(DDI_danish$PRAEPARATGRUPPERINGER, function(x) data.table(t(x))),
fill = TRUE)
View(DDI_danish)
#Obtaining Stof_ID (the drug_ID)
Niveau3 <- rbindlist(lapply(DDI_danish$NIVEAU3ER, function(x) data.table(t(x))),
fill = TRUE)
Niveau3 <- as.data.frame(Niveau3)
#Obtaining ID_of_substance
Substanser <- rbindlist(lapply(DDI_danish$SUBSTANSER, function(x) data.table(t(x))),
fill = TRUE)
Substanser <- as.data.frame(Substanser)
#Obtaining praeparat_ID
PraeparatGrupperinger <- rbindlist(lapply(DDI_danish$PRAEPARATGRUPPERINGER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining praeparatIdentifier
Praeparater <- rbindlist(lapply(DDI_danish$PRAEPARATER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining ATC code
ATC_codes <- readxl::read_xlsx("list_of_medicines.xlsx")
# Changing column type from 'List' to 'Character' in order to do merges.
Niveau3$ID_Stof1 <- as.character(Niveau3$ID_Stof1)
Niveau3$ID_Stof2 <- as.character(Niveau3$ID_Stof2)
Substanser$ID_Stof <- as.character(Substanser$ID_Stof)
Substanser$ID_Substans <- as.character(Substanser$ID_Substans)
Praeparat_grupering$ID_Praeparat <- as.character(Praeparat_grupering$ID_Praeparat)
Sys.setenv(LANGUAGE = 'EN')
#Obtaining praeparat_ID
PraeparatGrupperinger <- rbindlist(lapply(DDI_danish$PRAEPARATGRUPPERINGER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining Stof_ID (the drug_ID)
Niveau3 <- rbindlist(lapply(DDI_danish$NIVEAU3ER, function(x) data.table(t(x))),
fill = TRUE)
Niveau3 <- as.data.frame(Niveau3)
#Obtaining ID_of_substance
Substanser <- rbindlist(lapply(DDI_danish$SUBSTANSER, function(x) data.table(t(x))),
fill = TRUE)
Substanser <- as.data.frame(Substanser)
#Obtaining praeparat_ID
PraeparatGrupperinger <- rbindlist(lapply(DDI_danish$PRAEPARATGRUPPERINGER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining praeparatIdentifier
Praeparater <- rbindlist(lapply(DDI_danish$PRAEPARATER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining ATC code
ATC_codes <- readxl::read_xlsx("list_of_medicines.xlsx")
knitr::opts_chunk$set(echo = TRUE)
library(XML)
library(data.table)
DDI_danish <- xmlParse("XML_Dato_3.xml")
DDI_danish <-xmlToList(DDI_danish)
#Obtaining Stof_ID (the drug_ID)
Niveau3 <- rbindlist(lapply(DDI_danish$NIVEAU3ER, function(x) data.table(t(x))),
fill = TRUE)
Niveau3 <- as.data.frame(Niveau3)
#Obtaining ID_of_substance
Substanser <- rbindlist(lapply(DDI_danish$SUBSTANSER, function(x) data.table(t(x))),
fill = TRUE)
Substanser <- as.data.frame(Substanser)
#Obtaining praeparat_ID
PraeparatGrupperinger <- rbindlist(lapply(DDI_danish$PRAEPARATGRUPPERINGER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining praeparatIdentifier
Praeparater <- rbindlist(lapply(DDI_danish$PRAEPARATER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining ATC code
ATC_codes <- readxl::read_xlsx("list_of_medicines.xlsx")
# Changing column type from 'List' to 'Character' in order to do merges.
Niveau3$ID_Stof1 <- as.character(Niveau3$ID_Stof1)
Niveau3$ID_Stof2 <- as.character(Niveau3$ID_Stof2)
Substanser$ID_Stof <- as.character(Substanser$ID_Stof)
Substanser$ID_Substans <- as.character(Substanser$ID_Substans)
Praeparat_grupering$ID_Praeparat <- as.character(Praeparat_grupering$ID_Praeparat)
PraeparatGrupperinger$ID_Praeparat <- as.character(PraeparatGrupperinger$ID_Praeparat)
PraeparatGrupperinger$ID_Substans <- as.character(PraeparatGrupperinger$ID_Substans)
Praeparat$ID_Praeparat <- as.character(Praeparat$ID_Praeparat)
Praeparater$ID_Praeparat <- as.character(Praeparater$ID_Praeparat)
Praeparater$Praeparatidentifier <- as.character(Praeparater$Praeparatidentifier)
###
Index <- c(Niveau3$ID_Stof1,Niveau3$ID_Stof2)
Index <- unique(Index)     #754 drugs
Index <- as.data.frame(Index)
colnames(Index)[1] = 'ID_Stof'
###
Index<- merge(Index,Substanser[,c(1,2)], by = 'ID_Stof')
Index <- unique(Index)
###
Index<- merge(Index,Praeparat_grupering[,c(2,3)], by = 'ID_Substans')
###
Index<- merge(Index,PraeparatGrupperinger[,c(2,3)], by = 'ID_Substans')
Index <- unique(Index)
###
Index<- merge(Index,Praeparat[,c(1,2)], by = 'ID_Praeparat')
###
Index<- merge(Index,Praeparater[,c(1,2)], by = 'ID_Praeparat')
Index <- unique(Index)
###
Index<- merge(Index,ATC_codes[,c(1,7)], by.x = 'Praeparatidentifier', by.y = 'Drugid')
Index <- unique(Index)
Index <- Index[,c('ID_Stof','ATC-kode')]
colnames(Index)[2] <- 'ATC_code'
Index <- Index[,c('ID_Stof','ATC-kode')]
View(Index)
DDI_dataframe <- Niveau3[,8:9]
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
DDI_dataframe <- Niveau3[,8:9]
View(DDI_dataframe)
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
View(Index)
DDI_dataframe <- Niveau3[,8:9]
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
View(DDI_dataframe)
DDI_dataframe <- DDI_dataframe[,3:4]
DDI_dataframe <- unique(DDI_dataframe)    #20370 DDIs
View(DDI_dataframe)
#Obtaining Stof_ID (the drug_ID)
Niveau3 <- rbindlist(lapply(DDI_danish$NIVEAU3ER, function(x) data.table(t(x))),
fill = TRUE)
Niveau3 <- as.data.frame(Niveau3)
#Obtaining ID_of_substance
Substanser <- rbindlist(lapply(DDI_danish$SUBSTANSER, function(x) data.table(t(x))),
fill = TRUE)
Substanser <- as.data.frame(Substanser)
#Obtaining praeparat_ID
PraeparatGrupperinger <- rbindlist(lapply(DDI_danish$PRAEPARATGRUPPERINGER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining praeparatIdentifier
Praeparater <- rbindlist(lapply(DDI_danish$PRAEPARATER, function(x) data.table(t(x))),
fill = TRUE)
#Obtaining ATC code
ATC_codes <- readxl::read_xlsx("list_of_medicines.xlsx")
View(ATC_codes)
DDI_dataframe <- Niveau3[,8:9]
View(Niveau3)
View(DDI_dataframe)
View(Index)
Index <- unique(Index)
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
# Changing column type from 'List' to 'Character' in order to do merges.
Niveau3$ID_Stof1 <- as.character(Niveau3$ID_Stof1)
Niveau3$ID_Stof2 <- as.character(Niveau3$ID_Stof2)
Substanser$ID_Stof <- as.character(Substanser$ID_Stof)
Substanser$ID_Substans <- as.character(Substanser$ID_Substans)
Praeparat_grupering$ID_Praeparat <- as.character(Praeparat_grupering$ID_Praeparat)
# Changing column type from 'List' to 'Character' in order to do merges.
Niveau3$ID_Stof1 <- as.character(Niveau3$ID_Stof1)
Niveau3$ID_Stof2 <- as.character(Niveau3$ID_Stof2)
Substanser$ID_Stof <- as.character(Substanser$ID_Stof)
Substanser$ID_Substans <- as.character(Substanser$ID_Substans)
PraeparatGrupperinger$ID_Praeparat <- as.character(PraeparatGrupperinger$ID_Praeparat)
PraeparatGrupperinger$ID_Substans <- as.character(PraeparatGrupperinger$ID_Substans)
Praeparater$ID_Praeparat <- as.character(Praeparater$ID_Praeparat)
Praeparater$Praeparatidentifier <- as.character(Praeparater$Praeparatidentifier)
###
Index <- c(Niveau3$ID_Stof1,Niveau3$ID_Stof2)
Index <- unique(Index)     #754 drugs
Index <- as.data.frame(Index)
colnames(Index)[1] = 'ID_Stof'
###
###
Index<- merge(Index,Substanser[,c(1,2)], by = 'ID_Stof')
Index <- unique(Index)
###
###
Index<- merge(Index,PraeparatGrupperinger[,c(2,3)], by = 'ID_Substans')
Index <- unique(Index)
###
###
Index<- merge(Index,Praeparater[,c(1,2)], by = 'ID_Praeparat')
Index <- unique(Index)
###
###
Index<- merge(Index,ATC_codes[,c(1,7)], by.x = 'Praeparatidentifier', by.y = 'Drugid')
Index <- unique(Index)
###
Index <- Index[,c('ID_Stof','ATC-kode')]
colnames(Index)[2] <- 'ATC_code'
View(Index)
###
Index <- c(Niveau3$ID_Stof1,Niveau3$ID_Stof2)
Index <- unique(Index)     #754 drugs
Index <- as.data.frame(Index)
colnames(Index)[1] = 'ID_Stof'
###
Index<- merge(Index,Substanser[,c(1,2)], by = 'ID_Stof')
Index <- unique(Index)
###
Index<- merge(Index,PraeparatGrupperinger[,c(2,3)], by = 'ID_Substans')
Index <- unique(Index)
Index <- unique(Index)
###
Index<- merge(Index,Praeparater[,c(1,2)], by = 'ID_Praeparat')
Index <- unique(Index)
###
Index<- merge(Index,ATC_codes[,c(1,7)], by.x = 'Praeparatidentifier', by.y = 'Drugid')
Index <- unique(Index)
Index <- unique(Index)
View(Index)
DDI_dataframe <- Niveau3[,8:9]
Index <- Index[,c('ID_Stof','ATC-kode')]
colnames(Index)[2] <- 'ATC_code'
Index <- unique(Index
Index <- unique(Index)
View(Index)
Index <- unique(Index)
DDI_dataframe <- Niveau3[,8:9]
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
DDI_dataframe <- DDI_dataframe[,3:4]
DDI_dataframe <- unique(DDI_dataframe)    #20370 DDIs
write.table(DDI_dataframe, "DanishDB_to_ATC_codes.txt")
write.table(DDI_dataframe, "DanishDB_to_ATC_codes.txt",row.names = FALSE)
write.table(DDI_dataframe, "DanishDB_to_ATC_codes.txt",row.names = FALSE, col.names = FALSE)
write.table(DDI_dataframe, "DanishDB_to_ATC_codes.txt",row.names = FALSE, col.names = FALSE, sep = '\t')
knitr::opts_chunk$set(echo = TRUE)
library(XML)
library(data.table)
DDI_danish <- xmlParse("XML_Dato_3.xml")
DDI_danish <-xmlToList(DDI_danish)
#Obtaining Stof_ID (the drug_ID)
Niveau3 <- rbindlist(lapply(DDI_danish$NIVEAU3ER, function(x) data.table(t(x))),
fill = TRUE)
View(DDI_dataframe)
vectori <- unique(c(DDI_dataframe$ATC_code.x,DDI_dataframe$ATC_code.y))
knitr::opts_chunk$set(echo = TRUE)
DDI_danish
DDI_danish <- xmlParse("XML_Dato_3.xml")
DDI_danish <-xmlToList(DDI_danish)
library(XML)
DDI_danish <- xmlParse("XML_Dato_3.xml")
DDI_danish <- xmlParse("XML_Dato_3.xml")
DDI_danish <-xmlToList(DDI_danish)
DDI_danish <-xmlToList(DDI_danish)
View(DDI_danish)
View(DDI_danish)
DDI_danish[["REKOMMANDATIONER"]][["REKOMMANDATION"]][["Tekst"]]
DDI_danish[["DOKUMENTATIONSGRADER"]][["DOKUMENTATIONSGRAD"]][["Forkortelse"]]
DDI_danish[["DOKUMENTATIONSGRADER"]][["DOKUMENTATIONSGRAD"]][["Navn"]]
DDI_danish[["DOKUMENTATIONSGRADER"]][["DOKUMENTATIONSGRAD"]][["Tekst"]]
DDI_danish[["DOKUMENTATIONSGRADER"]][["DOKUMENTATIONSGRAD"]][["Sorteringsnr"]]
knitr::opts_chunk$set(echo = TRUE)
#Obtaining degree of significance of DDI
Rekommandation <- rbindlist(lapply(DDI_danish$REKOMMANDATIONER, function(x) data.table(t(x))),
fill = TRUE)
library(XML)
library(data.table)
#Obtaining degree of significance of DDI
Rekommandation <- rbindlist(lapply(DDI_danish$REKOMMANDATIONER, function(x) data.table(t(x))),
fill = TRUE)
Rekommandation <- as.data.frame(Rekommandation)
View(Rekommandation)
View(Niveau3)
DDI_significance <- Niveau3[,c(5,8,9)]
View(DDI_significance)
DDI_significance <- merge(DDI_significance,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
Sys.setenv(LANGUAGE = 'EN')
DDI_significance <- merge(DDI_significance,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
#Adding rekommandation cell so to merge with the table of rekommandationer
Niveau3$ID_Rekommandation <- as.character(Niveau3$ID_Rekommandation)
DDI_significance <- Niveau3[,c(5,8,9)]
DDI_significance <- merge(DDI_significance,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
View(DDI_significance)
table(DDI_significance$Sorteringsnr)
Rekommandation$ID_Rekommandation <- as.character(Rekommandation$ID_Rekommandation)
DDI_significance <- Niveau3[,c(5,8,9)]
DDI_significance <- merge(DDI_significance,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
View(DDI_significance)
table(DDI_significance$Sorteringsnr)
class(DDI_significance$Sorteringsnr)
Rekommandation$Sorteringsnr <- as.numeric(Rekommandation$Sorteringsnr)
DDI_significance <- Niveau3[,c(5,8,9)]
DDI_significance <- merge(DDI_significance,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
table(DDI_significance$Sorteringsnr)
#Merging with ATCs
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_dataframe <- merge(DDI_dataframe,Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
View(Index)
DDI_significance <- DDI_significance[,!"ID_Rekommandation"]
DDI_significance <- DDI_significance[,!("ID_Rekommandation")]
DDI_significance <- DDI_significance[,2:4]
#Merging with ATCs
DDI_significance <- merge(DDI_significance, Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_significance <- merge(DDI_significance, Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
Index <- unique(Index)
#Merging with ATCs
DDI_significance <- merge(DDI_significance, Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
#Adding rekommandation cell so to merge with the table of rekommandationer
Niveau3$ID_Rekommandation <- as.character(Niveau3$ID_Rekommandation)
Rekommandation$Sorteringsnr <- as.numeric(Rekommandation$Sorteringsnr)
DDI_significance <- Niveau3[,c(5,8,9)]
DDI_significance <- merge(DDI_significance,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
DDI_significance <- DDI_significance[,2:4]
#Merging with ATCs
DDI_significance <- merge(DDI_significance, Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_significance <- merge(DDI_significance, Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
DDI_significance <- unique(DDI_significance)
DDI_significance <- unique(DDI_significance[,4:5])
DDI_significance <- unique(DDI_significance[,3:5])
#Adding rekommandation cell so to merge with the table of rekommandationer
Niveau3$ID_Rekommandation <- as.character(Niveau3$ID_Rekommandation)
Rekommandation$Sorteringsnr <- as.numeric(Rekommandation$Sorteringsnr)
DDI_significance <- Niveau3[,c(5,8,9)]
DDI_significance <- merge(DDI_significance,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
DDI_significance <- DDI_significance[,2:4]
#Merging with ATCs
DDI_significance <- merge(DDI_significance, Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_significance <- merge(DDI_significance, Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
DDI_significance <- unique(DDI_significance[,3:5])
library(readr)
setwd("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Danish drug-drug interaction dataset")
write_csv("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Significance_level/DDI_danish_with_significance_level.csv")
DDI_significance <- as.data.frame(DDI_significance)
write_csv("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Significance_level/DDI_danish_with_significance_level.csv")
write_csv(DDI_significance,"C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Significance_level/DDI_danish_with_significance_level.csv",col_names = FALSE)
knitr::opts_chunk$set(echo = TRUE)
write_csv(DDI_significance,"C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Significance_level/DDI_danish_with_significance_level.txt",col_names = FALSE)
library(XML)
library(data.table)
library(readr)
write_csv(DDI_significance,"C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Significance_level/DDI_danish_with_significance_level.txt",col_names = FALSE)
View(DDI_significance)
#Sorting variables
DDI_significance <- DDI_significance[,c(2,3,1)]
write_csv(DDI_significance,"C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Significance_level/DDI_danish_with_significance_level.txt",col_names = FALSE)
View(Rekommandation)
knitr::opts_chunk$set(echo = TRUE)
library(XML)
library(data.table)
library(readr)
View(DDI_significance)
write_csv(DDI_significance, "C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Features/Recommendation/DDI_danish_recommendation.txt")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
#Merging with ATCs
DDI_recommendation <- merge(DDI_recommendation, Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_recommendation <- merge(DDI_recommendation,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
DDI_recommendation <- Niveau3[,c(5,8,9)]
DDI_recommendation <- merge(DDI_recommendation,Rekommandation[,c(1,3)], by = 'ID_Rekommandation' )
DDI_recommendation <- DDI_recommendation[,2:4]
#Merging with ATCs
DDI_recommendation <- merge(DDI_recommendation, Index, by.x = 'ID_Stof1', by.y = 'ID_Stof')
DDI_recommendation <- merge(DDI_recommendation, Index, by.x = 'ID_Stof2', by.y = 'ID_Stof')
DDI_recommendation <- DDI_recommendation[,c(4,5,3)]
DDI_recommendation <- unique(DDI_recommendation)
#same DDI may have two level of recommandation. From the 4710 DDIs  in niveau3. We have 4698 unique DDIs. There are 12 DDIs that have more than one class efect (Niveau 2)
duplicated <- Niveau3[!duplicated(Niveau3[,c("ID_Stof1","ID_Stof2")]),]
DDI_recommendation$Sorteringsnr
# Doing ATC duplicates
Table1 <- DDI_recommendation
Table2 <- DDI_recommendation[c(2:1,3)]
colnames(Table1) <- c("drug", "codrug", "Sorteringsnr")
colnames(Table2) <- c("drug", "codrug", "Sorteringsnr")
DDI_recommendation <- rbind(Table1,Table2)
DDI_recommendation <-merge(
DDI_recommendation,
clinicaldrugpairs_counts[,1:2],
by = c("drug", "codrug")
)
clinicaldrugpairs_counts <-
read_delim("Data/clinicaldrugpairs_counts.tsv",
"\t",
escape_double = FALSE,
trim_ws = TRUE)
library(XML)
library(data.table)
library(readr)
clinicaldrugpairs_counts <-
read_delim("Data/clinicaldrugpairs_counts.tsv",
"\t",
escape_double = FALSE,
trim_ws = TRUE)
DDI_recommendation <-merge(
DDI_recommendation,
clinicaldrugpairs_counts[,1:2],
by = c("drug", "codrug")
)
# Adding level 1 ATC
DDI_recommendation$level_1_atc_drug <- substr(DDI_recommendation$drug,1,1)
DDI_recommendation$level_1_atc_codrug <- substr(DDI_recommendation$codrug,1,1)
write_csv(DDI_recommendation,
"C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Features/Management/Danish_management_DDI.txt",
col_names = FALSE)
table(DDI_recommendation$Sorteringsnr)
table(DDI_significance$Sorteringsnr)
# Unifying DDI with clinical significance
DDI_clinical_significance <- merge(Niveau3[,c(8,9,4)], Clinical_significance[,c(1,3)], by = "ID_KliniskBetydning")
#Obtaining table of clinical significance types
Clinical_significance <- rbindlist(lapply(DDI_danish$KLINISKEBETYDNINGER, function(x) data.table(t(x))),
fill = TRUE)
Clinical_significance <- as.data.frame(Clinical_significance)
# Passing from lists to characters
Clinical_significance$Navn <- as.character(Clinical_significance$Navn)
Clinical_significance$ID_KliniskBetydning <- as.character(Clinical_significance$ID_KliniskBetydning)
Niveau3$ID_KliniskBetydning <- as.character(Niveau3$ID_KliniskBetydning)
# Unifying DDI with clinical significance
DDI_clinical_significance <- merge(Niveau3[,c(8,9,4)], Clinical_significance[,c(1,3)], by = "ID_KliniskBetydning")
# Mapping to ATC codes
DDI_clinical_significance <- merge(DDI_clinical_significance,Index, by.x = "ID_Stof1", by.y = "ID_Stof")
DDI_clinical_significance <- merge(DDI_clinical_significance,Index, by.x = "ID_Stof2", by.y = "ID_Stof")
DDI_clinical_significance <- DDI_clinical_significance[,c(5,6,4)]
DDI_clinical_significance <- unique(DDI_clinical_significance)
# Doing ATC duplicates
Table1 <- DDI_clinical_significance
Table2 <- DDI_clinical_significance[c(2:1,3)]
colnames(Table1) <- c("drug", "codrug", "Navn")
colnames(Table2) <- c("drug", "codrug", "Navn")
DDI_clinical_significance <- rbind(Table1,Table2)
DDI_clinical_significance <-merge(
DDI_clinical_significance,
clinicaldrugpairs_counts[,1:2],
by = c("drug", "codrug")
)
# Adding level 1 ATC
DDI_clinical_significance$level_1_atc_drug <- substr(DDI_clinical_significance$drug,1,1)
DDI_clinical_significance$level_1_atc_codrug <- substr(DDI_clinical_significance$codrug,1,1)
write_csv(DDI_clinical_significance,
"C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Features/Clinical_significance/Danish_clinical_significance_DDI.txt",
col_names = FALSE)
table(DDI_clinical_significance)
table(DDI_clinical_significance$Navn)
View(Niveau3)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(eval = FALSE)
#same DDI may have two level of recommandation. From the 4710 DDIs  in niveau3. We have 4698 unique DDIs. There are 12 DDIs that have more than one class efect (Niveau 2)
duplicated <- Niveau3[!duplicated(Niveau3[,c("ID_Stof1","ID_Stof2")]),]
#same DDI may have two level of recommandation. From the 4710 DDIs  in niveau3. We have 4698 unique DDIs. There are 12 DDIs that have more than one class efect (Niveau 2)
duplicated <- Niveau3[duplicated(Niveau3[,c("ID_Stof1","ID_Stof2")]),]
duplicated
View(duplicated)
duplicated <- duplicated[,c(1,2,4)]
duplicated <- Niveau3[duplicated(duplicated[,c("ID_Stof1","ID_Stof2")]),]
#same DDI may have two level of recommandation. From the 4710 DDIs  in niveau3. We have 4698 unique DDIs. There are 12 DDIs that have more than one class efect (Niveau 2)
duplicated <- Niveau3[duplicated(Niveau3[,c("ID_Stof1","ID_Stof2")]),]
View(duplicated)
duplicated <- Niveau3[duplicated(duplicated[,c("ID_Stof1","ID_Stof2","ID_KliniskBetydning")]),]
duplicated <- Niveau3[duplicated(duplicated[,c("ID_Stof1","ID_Stof2","ID_Rekommandation")]),]
#same DDI may have two level of recommandation. From the 4710 DDIs  in niveau3. We have 4698 unique DDIs. There are 12 DDIs that have more than one class efect (Niveau 2)
duplicated <- Niveau3[duplicated(Niveau3[,c("ID_Stof1","ID_Stof2")]),]
duplicated <- Niveau3[duplicated(Niveau3[, Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e"]
]
duplicated <- Niveau3[duplicated(Niveau3[, Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e"])]
duplicated <- Niveau3[duplicated(Niveau3[, Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e"]),]
duplicated <- Niveau3[duplicated(Niveau3[, Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e"]),]
duplicated <- Niveau3[duplicated(Niveau3[Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e",]),]
duplicated <- Niveau3[Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e",]
View(duplicated)
duplicated <- Niveau3[Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e" & Niveau3$ID_Stof2 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e",]
#same DDI may have two level of recommandation. From the 4710 DDIs  in niveau3. We have 4698 unique DDIs. There are 12 DDIs that have more than one class efect (Niveau 2)
duplicated <- Niveau3[duplicated(Niveau3[,c("ID_Stof1","ID_Stof2")]),]
duplicated <- Niveau3[Niveau3$ID_Stof1 == "3bbf29e6-dfff-4960-a6b1-5fc9fdcb389e" & Niveau3$ID_Stof2 == "c186d259-0ae0-4daf-ba77-c23b34a659a9",]
View(duplicated)
duplicated <- Niveau3[duplicated(Niveau3[,c("ID_Stof1","ID_Stof2")]),]
duplicated_alt <- Niveau3[Niveau3$ID_Stof1 == "fb159671-053d-4b1f-ab6f-d2ea69e32832" & Niveau3$ID_Stof2 == "988a6c2e-b77e-4e65-8da1-ba8f66cedf7e",]
View(duplicated_alt)
duplicated_alt <- duplicated_alt[,c(8,9,1,3,4,5)]
View(DDI_danish)
View(Rekommandation)
View(Index)
duplicated_alt <- merge(duplicated_alt, Index, by.x = "ID_Stof1", by.y = "ID_Stof")
duplicated_alt <- merge(duplicated_alt, Index, by.x = "ID_Stof2", by.y = "ID_Stof")
View(Rekommandation)
duplicated_alt <- merge(duplicated_alt, Rekommandation[,c(1,3)], by = "ID_Rekommandation")
View(Clinical_significance)
duplicated_alt <- merge(duplicated_alt, Clinical_significance[,c(1,3)], by = "ID_KliniskBetydning")
