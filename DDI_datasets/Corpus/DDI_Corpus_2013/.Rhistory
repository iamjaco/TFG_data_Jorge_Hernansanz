knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_NDRRT_DDIs_lists <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/public-PDDI-analysis-master/pickle-data/ddicorpus2013-ddis.pickle")
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_NDRRT_DDIs_lists <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_NDRRT_DDIs <- t(as.data.frame(lapply(pickle_NDRRT_DDIs_lists, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
pickle_NDRRT_DDIs <- as.data.frame(pickle_NDRRT_DDIs)
#Modifying labels.
rownames(pickle_NDRRT_DDIs) <- NULL
colnames(pickle_NDRRT_DDIs) <- c("Drug1","Drug2","diiType","evidenceStatement")
View(pickle_NDRRT_DDIs)
library(readr)
DDICorpus2013Mapped <- read_delim("DDICorpus2013Mapped.csv",
"$", escape_double = FALSE, col_names = FALSE,
trim_ws = TRUE)
View(DDICorpus2013Mapped)
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_Corpus_DDI <- t(as.data.frame(lapply(pickle_NDRRT_DDIs_lists, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_Corpus_DDI <- t(as.data.frame(lapply(pickle_Corpus_DDI, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
pickle_Corpus_DDI <- as.data.frame(pickle_NDRRT_DDIs)
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_Corpus_DDI <- t(as.data.frame(lapply(pickle_Corpus_DDI, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
pickle_Corpus_DDI <- as.data.frame(pickle_Corpus_DDI)
#Modifying labels.
rownames(pickle_Corpus_DDI) <- NULL
colnames(pickle_Corpus_DDI) <- c("Drug1","Drug2","diiType","evidenceStatement")
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- pickle_Corpus_DDI[gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1)]
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- pickle_Corpus_DDI[gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1),]
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- pickle_Corpus_DDI[gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1),]
pickle_Corpus_DDI$Drug2 <- pickle_Corpus_DDI[gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2),]
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- pickle_Corpus_DDI[gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1),]
pickle_Corpus_DDI$Drug2 <- pickle_Corpus_DDI[gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2),]
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1)
pickle_Corpus_DDI$Drug2 <- pickle_Corpus_DDIgsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2)
pickle_Corpus_DDI$Drug2 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2)
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1)
pickle_Corpus_DDI$Drug2 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2)
View(pickle_Corpus_DDI)
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_Corpus_DDI <- t(as.data.frame(lapply(pickle_Corpus_DDI, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
pickle_Corpus_DDI <- as.data.frame(pickle_Corpus_DDI)
#Modifying labels.
rownames(pickle_Corpus_DDI) <- NULL
colnames(pickle_Corpus_DDI) <- c("Drug1","Drug2","diiType","evidenceStatement")
View(pickle_Corpus_DDI)
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1)
pickle_Corpus_DDI$Drug2 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2)
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
Drug_ATC_codes_DB <- read.csv("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DrugBank/Downloaded_XML_database/Issue_ATC_codes/Drug_ATC_codes_DB.csv")
View(Drug_ATC_codes_DB)
corpus_id_ATC <- corpus_id_ATC %in% Drug_ATC_codes_DB$parent_key
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
corpus_id_ATC <- corpus_id_ATC %in% Drug_ATC_codes_DB$parent_key
# Checking no missing identifiers in the Corpus
setdiff(corpus_id_ATC,pickle_Corpus_DDI$Drug1)
corpus_id_ATC <- corpus_id_ATC[corpus_id_ATC %in% Drug_ATC_codes_DB$parent_key]
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
setdiff(corpus_id_ATC, Drug_ATC_codes_DB$parent_key)
# Checking no missing identifiers in the Corpus
setdiff(corpus_id_ATC,pickle_Corpus_DDI$Drug1)
# Checking no missing identifiers in the Corpus
setdiff(pickle_Corpus_DDI$Drug1,corpus_id_ATC)
# Checking no missing identifiers in the Corpus
setdiff(pickle_Corpus_DDI$Drug2,corpus_id_ATC)
remove(corpus_id_ATC, list = setdiff(pickle_Corpus_DDI$Drug2,corpus_id_ATC))
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
setdiff(corpus_id_ATC, Drug_ATC_codes_DB$parent_key)
remove(corpus_id_ATC, list = setdiff(pickle_Corpus_DDI$Drug2,corpus_id_ATC))
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
# Checking no missing identifiers in the Corpus
mis_id <- setdiff(pickle_Corpus_DDI$Drug2,corpus_id_ATC)
mis_id <- setdiff(corpus_id_ATC, Drug_ATC_codes_DB$parent_key)
# Checking missing interaction due to the lack of 29 identifiers.
corpus_id_ATC = corpus_id_ATC[!(corpus_id_ATC %in% mis_id)]
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
# Checking missing interaction due to the lack of 29 identifiers.
corpus_id_ATC = corpus_id_ATC[!(corpus_id_ATC %in% mis_id)]
pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC|pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC|pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
View(DDICorpus2013Mapped)
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_Corpus_DDI <- t(as.data.frame(lapply(pickle_Corpus_DDI, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
pickle_Corpus_DDI <- as.data.frame(pickle_Corpus_DDI)
#Modifying labels.
rownames(pickle_Corpus_DDI) <- NULL
colnames(pickle_Corpus_DDI) <- c("Drug1","Drug2","diiType","evidenceStatement")
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1)
pickle_Corpus_DDI$Drug2 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2)
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
mis_id <- setdiff(corpus_id_ATC, Drug_ATC_codes_DB$parent_key)
# Checking no missing identifiers in the Corpus
setdiff(pickle_Corpus_DDI$Drug2,corpus_id_ATC)
# Checking missing interaction due to the lack of 29 identifiers.
corpus_id_ATC = corpus_id_ATC[!(corpus_id_ATC %in% mis_id)]
pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC|pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC & pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC & pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
pickle_corpus_filtered <- pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC| pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
pickle_corpus_filtered <- pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC & pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
pickle_corpus_filtered <- pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC | pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
pickle_corpus_filtered <- pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC & pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("C:/Users/Jorge_TEMP/Desktop/Thesis Bibliography/DDI_Corpus_2013/ddicorpus2013-ddis.pickle")
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_Corpus_DDI <- t(as.data.frame(lapply(pickle_Corpus_DDI, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
pickle_Corpus_DDI <- as.data.frame(pickle_Corpus_DDI)
#Modifying labels.
rownames(pickle_Corpus_DDI) <- NULL
colnames(pickle_Corpus_DDI) <- c("Drug1","Drug2","diiType","evidenceStatement")
View(pickle_Corpus_DDI)
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1)
pickle_Corpus_DDI$Drug2 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2)
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
mis_id <- setdiff(corpus_id_ATC, Drug_ATC_codes_DB$parent_key)
library(readr)
Drug_ATC_codes_DB <- read_csv("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/DrugBank/Downloaded_XML_database/Datasets_folder/Drug_ATC_codes_DB.csv")
View(Drug_ATC_codes_DB)
#Filtering first columns
pickle_Corpus_DDI$Drug1 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug1)
pickle_Corpus_DDI$Drug2 <- gsub("http://bio2rdf.org/drugbank:","",pickle_Corpus_DDI$Drug2)
# Joining identifiers, find uniques, and map to drugbank
corpus_id_ATC <- c(pickle_Corpus_DDI$Drug1,pickle_Corpus_DDI$Drug2)
corpus_id_ATC <- unique(corpus_id_ATC)
mis_id <- setdiff(corpus_id_ATC, Drug_ATC_codes_DB$parent_key)
# Checking no missing identifiers in the Corpus
setdiff(pickle_Corpus_DDI$Drug2,corpus_id_ATC)
# Checking missing interaction due to the lack of 29 identifiers.
corpus_id_ATC = corpus_id_ATC[!(corpus_id_ATC %in% mis_id)]
pickle_corpus_filtered <- pickle_Corpus_DDI[pickle_Corpus_DDI$Drug1 %in% corpus_id_ATC & pickle_Corpus_DDI$Drug2 %in% corpus_id_ATC,]
View(pickle_corpus_filtered)
View(pickle_Corpus_DDI)
knitr::opts_chunk$set(echo = TRUE)
library(reticulate)
#Creating a variable to record in memory package 'pandas' with its functions.
pandas_imp <- import("pandas")
#Need to use py_install("pandas")
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("ddicorpus2013-ddis.pickle")
#Converting pickle file in data frame (Needs to be called twice the as.data.frame).
pickle_Corpus_DDI <- t(as.data.frame(lapply(pickle_Corpus_DDI, function(x){return(c(x$drug1, x$drug2,x$ddiType, x$evidenceStatement))})))
pickle_Corpus_DDI <- as.data.frame(pickle_Corpus_DDI)
#Modifying labels.
rownames(pickle_Corpus_DDI) <- NULL
colnames(pickle_Corpus_DDI) <- c("Drug1","Drug2","diiType","evidenceStatement")
View(pickle_Corpus_DDI)
#Reading pickle file.
pickle_Corpus_DDI <- pandas_imp$read_pickle("ddicorpus2013-ddis.pickle")
View(pickle_Corpus_DDI)
pickle_Corpus_DDI[[1]][["evidenceStatement"]]
pickle_Corpus_DDI[[11]][["evidenceStatement"]]
