scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0))
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0))
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0),
line.size = 0.5)
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0))
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0))
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0),
line.size = 0.1)
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0),
point.size = 0.1)
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
text.scale = c(1,1,1,1,1,0),
line.size = 0.1,
point.size = 0.1)
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1)
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
main.bar.color = 'blue' )
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'blue' )
upset(fromList(miniupsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
upset(fromList(upsetR),
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
upset(fromList(upsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
pdf(file = "patata.pdf", width = 12, height = 8)
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
dev.off
while (!is.null(dev.list()))  dev.off()
pdf(file = "patata.pdf", width = 12, height = 8)
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
dev.off
pdf(file = "patata.pdf", width = 12, height = 8)
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
dev.off()
pdf(file = "patata.pdf", width = 12, height = 8)
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
dev.off()
png(file = "patata.png", width = 12, height = 8)
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
dev.off()
a <- upset(fromList(miniupsetR), nsets = 15, nintersects = NA,
scale.intersections = "log10",
scale.sets = "log10",
mainbar.y.label="Log10(Intersection of DDI)",
sets.x.label="log10(Number of DDIs)",
show.numbers = FALSE,
line.size = 0.1,
point.size = 0.1,
matrix.color = 'grey' )
pdf(file = "patata.pdf", width = 12, height = 8)
a
pdf(file = "patata.pdf", width = 12, height = 8)
a
dev.off()
pdf(file = "patata.pdf", width = 12, height = 8)
a
a
dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
a
dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
a
while (!is.null(dev.list()))  dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
a
while (!is.null(dev.list()))  dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
a
while (!is.null(dev.list()))
dev.off()
dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
a
dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
dev.off()
pdf(file = "patata.pdf", width = 4, height = 4)
a
while (!is.null(dev.list()))  dev.off()
All_drugs_index <- read.csv("Indexes/2_Index_all_drugs_ATC.txt")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8),
panel.background = element_blank()) +
ylab("% of total drugs")
library(ggplot2)
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 8),
legend.text = element_text(size = 8),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 8),
legend.text = element_text(element_blank()),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.title = element_text(size = 8),
legend.text = element_text(element_blank()),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
legend.title = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.text.x = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.title.x = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.ticks.x = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.t
panel.background = element_blank()) +
ylab("% of total drugs")
ggplot(All_drugs_index, aes(Dataset_source, fill = ATC_Level_1))+
geom_bar(position = 'fill')+
scale_fill_manual(values = c("#EF5F54","#FA9D98" , "#FCD6D3", "#5C5D5F",
"#929294", "#BBBABF", "#52A152", "#9EC599",
"#DDF7D2", "#77B1D7", "#CCDEF4", "#F2E439",
"#FDF19D", "#FCF8D2")) +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none",
axis.title.x = element_blank(),
axis.title.y = element_blank(),
panel.background = element_blank()) +
ylab("% of total drugs")
knitr::opts_chunk$set(echo = TRUE)
Drugbank <- readLines("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Datasets_and_vectors/DDI_compendia/Vectors/ATC_Drugbank.txt")
KEGG <- readLines("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Datasets_and_vectors/DDI_compendia/Vectors/ATC_KEGG.txt")
Sys.setenv(language = 'en')
Drugbank <- readLines("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Datasets_and_vectors/DDI_compendia/Vectors/ATC_Drugbank.txt")
Drugbank <- readLines("Vectors/ATC_Drugbank.txt")
Drugbank <- unique(Drugbank)
Drugbank <- readLines("Vectors/ATC_Drugbank.txt")
Drugbank <- unique(Drugbank)
Drugbank <- readLines("Vectors/ATC_Drugbank.txt")
knitr::opts_chunk$set(echo = TRUE)
library(tidyr)
#Fetching the files to read
data_files <- list.files("Vectors/", full.names = T)
data_files <- data_files[grepl("*.txt", data_files)]
#Creating the matrix where they will be stored
DDI_index <- matrix(nrow = 0, ncol = 3)
colnames(DDI_index) = c("ATC1","ATC2","Dataset_source")
vector_of_length <- c()
for (file_name in data_files){
file = read_table2(file_name,
col_names = FALSE)
#Taking unique DDIs from each file
file <- unique(file)
#Separating '_' to obtain two columns.
file <- file %>%
separate(X1, into = c("ATC1","ATC2"), sep = '_')
# Used to assign data_Source to the DDIs
file_name <- gsub("Vectors/Vector_of_","",file_name)
file_name <- gsub("_DDI.txt","",file_name)
file_name <- gsub("_"," ",file_name)
file$Dataset_source <- sprintf("%s",file_name)
DDI_index <- rbind(DDI_index,file)
}
library(readr)
library(data.table)
library(stringr)
library(tidyr)
#Fetching files
data_files <- list.files("Vectors/", full.names = T)
data_files <- data_files[grepl("*.txt", data_files)]
Vector_of_ATC_codes <- c()
for (file in data_files){
file = read_table2(file,
col_names = FALSE)
#Separating '_' to obtain two columns.
file <- file %>%
separate(X1, into = c("X1","X2"), sep = '_')
#Looking to all drugs in the dataset and selecting unique
Vector_of_file <- unique(c(file$X1,file$X2))
Vector_of_ATC_codes <- unique(c(Vector_of_ATC_codes,Vector_of_file))
}
Vector_of_ATC_codes <- as.data.frame(sort(Vector_of_ATC_codes))
colnames(Vector_of_ATC_codes)[1] <- 'ATC_CODE'
#Creating the different levels
Vector_of_ATC_codes$ATC_Level_1 <- substring(Vector_of_ATC_codes$ATC_CODE,1,1)
Vector_of_ATC_codes$ATC_Level_2 <- substring(Vector_of_ATC_codes$ATC_CODE,1,3)
Vector_of_ATC_codes$ATC_Level_3 <- substring(Vector_of_ATC_codes$ATC_CODE,1,4)
Vector_of_ATC_codes$ATC_Level_4 <- substring(Vector_of_ATC_codes$ATC_CODE,1,5)
Vector_of_ATC_codes$ATC_Level_5 <- substring(Vector_of_ATC_codes$ATC_CODE,1,7)
write_csv(Vector_of_ATC_codes, "Indexes/1_Index_ATC.txt")
library(tidyr)
#Fetching the files to read
data_files <- list.files("Vectors/", full.names = T)
data_files <- data_files[grepl("*.txt", data_files)]
#Creating the matrix where they will be stored
DDI_index <- matrix(nrow = 0, ncol = 3)
colnames(DDI_index) = c("ATC1","ATC2","Dataset_source")
vector_of_length <- c()
for (file_name in data_files){
file = read_table2(file_name,
col_names = FALSE)
#Taking unique DDIs from each file
file <- unique(file)
#Separating '_' to obtain two columns.
file <- file %>%
separate(X1, into = c("ATC1","ATC2"), sep = '_')
# Used to assign data_Source to the DDIs
file_name <- gsub("Vectors/Vector_of_","",file_name)
file_name <- gsub("_DDI.txt","",file_name)
file_name <- gsub("_"," ",file_name)
file$Dataset_source <- sprintf("%s",file_name)
DDI_index <- rbind(DDI_index,file)
}
write_csv(DDI_index,"Indexes/3_DDI_index.txt")
View(Vector_of_ATC_codes)
View(DDI_index)
table(DDI_index$Dataset_source)
knitr::opts_chunk$set(echo = TRUE)
Drugbank <- readLines("C:/Users/Jorge_TEMP/Desktop/Thesis_Bibliography/DDI_datasets/Analysis/Datasets_and_vectors/DDI_compendia/Vectors/ATC_Drugbank.txt")
